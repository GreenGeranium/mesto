{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto/./src/components/Card.js","webpack://mesto/./src/components/FormValidator.js","webpack://mesto/./src/components/Section.js","webpack://mesto/./src/components/Popup.js","webpack://mesto/./src/components/PopupWithForm.js","webpack://mesto/./src/components/PopupWithConfirmation.js","webpack://mesto/./src/components/UserInfo.js","webpack://mesto/./src/utils/constants.js","webpack://mesto/./src/components/PopupWithImage.js","webpack://mesto/./src/pages/index.js","webpack://mesto/./src/components/Api.js"],"sourcesContent":["class Card {\n  constructor(\n    card,\n    cardTemplate,\n    handleCardClick,\n    handleTrashClick,\n    profileId,\n    handleAddingLike,\n    handleRemovingLike\n  ) {\n    this._cardTemplate = cardTemplate;\n    this._profileId = profileId;\n    this._card = card;\n    this._name = card.name;\n    this._link = card.link;\n    this._likes = card.likes;\n    this._cardId = card._id;\n    this._ownerId = card.owner._id;\n    this._newCard = this._getTemplateCard();\n    this._likeButton = this._newCard.querySelector(\".card__button\");\n    this._deleteButton = this._newCard.querySelector(\".card__trash\");\n    this._cardImage = this._newCard.querySelector(\".card__image\");\n    this._numberOfLikes = this._newCard.querySelector(\".card__likes-quantity\");\n    this._handleCardClick = handleCardClick;\n    this._handleTrashClick = handleTrashClick;\n    this._handleAddingLike = handleAddingLike;\n    this._handleRemovingLike = handleRemovingLike;\n  }\n\n  //появление урны только у собственных карточек\n  _showTrashIcon() {\n    if (this._ownerId === this._profileId) {\n      this._deleteButton.style.display = \"block\";\n    }\n  }\n\n  //Получение клона карточки\n  _getTemplateCard() {\n    const card = document\n      .querySelector(this._cardTemplate)\n      .content.querySelector(\".elements__item\")\n      .cloneNode(true);\n    return card;\n  }\n\n  //Установка значений имени и источника для картчки\n  _setData() {\n    this._newCard.querySelector(\".card__name\").textContent = this._name;\n    this._cardImage.src = this._link;\n    this._cardImage.alt = this._name;\n  }\n\n  //Не очень понятно, как соединить _handleLike с публичным методом setLikes, так как в таком случае setLikes будет\n  //перегруженным методом, который решает уже несколько задач и setLikes придется принимать на вход параметр,\n  //чтобы понимать надо ли ставить или удалять лайк\n\n  //Проставление лайка\n  _handleLike() {\n    if (this._likeButton.classList.contains(\"card__button_active\")) {\n      this._handleRemovingLike(\n        this._card,\n        this._numberOfLikes,\n        this._likeButton\n      );\n    } else {\n      this._handleAddingLike(this._card, this._numberOfLikes, this._likeButton);\n    }\n  }\n\n  //установка значения лайков карточки\n  setLikes(likesData) {\n    this._numberOfLikes.textContent = likesData.length;\n    likesData.forEach((cardLiker) => {\n      if (cardLiker._id === this._profileId) {\n        this._likeButton.classList.add(\"card__button_active\");\n      }\n    });\n  }\n\n  //Установка слушателей\n  _setEventListeners() {\n    this._deleteButton.addEventListener(\"click\", () => {\n      this._handleTrashClick(this._cardId, this._newCard);\n    });\n\n    this._likeButton.addEventListener(\"click\", () => {\n      this._handleLike();\n    });\n\n    this._cardImage.addEventListener(\"click\", () => {\n      this._handleCardClick(this._card);\n    });\n  }\n\n  //Получение видимой карточки на выходе\n  getView() {\n    this._showTrashIcon();\n    this._setData();\n    this.setLikes(this._likes);\n    this._setEventListeners();\n    return this._newCard;\n  }\n}\n\nexport default Card;\n","class FormValidator {\n  constructor(selectors, form) {\n    this._selectors = selectors;\n    this._formSelector = this._selectors.formSelector;\n    this._inputSelector = this._selectors.inputSelector;\n    this._submitButtonSelector = this._selectors.submitButtonSelector;\n    this._inactiveButtonClass = this._selectors.inactiveButtonClass;\n    this._inputErrorClass = this._selectors.inputErrorClass;\n    this._errorClass = this._selectors.errorClass;\n    this._form = form;\n    this._inputList = Array.from(\n      this._form.querySelectorAll(this._inputSelector)\n    );\n    this._submitButton = this._form.querySelector(this._submitButtonSelector);\n  }\n\n  //Появляется красная линия ошибки\n  _showInputError(inputElement, errorMessage) {\n    const errorElement = this._form.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.add(this._inputErrorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(this._errorClass);\n  }\n\n  //Исчезает красная линия ошибки\n  _hideInputError(inputElement) {\n    const errorElement = this._form.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.remove(this._inputErrorClass);\n    errorElement.classList.remove(this._errorClass);\n    errorElement.textContent = \"\";\n  }\n\n  //проверка на валидность\n  _checkInputValidity(inputElement) {\n    if (inputElement.validity.valid) {\n      this._hideInputError(inputElement);\n    } else {\n      this._showInputError(inputElement, inputElement.validationMessage);\n    }\n  }\n\n  //проверка всех полей инпута\n  _hasInvalidInput() {\n    return this._inputList.some((inputElement) => {\n      return !inputElement.validity.valid;\n    });\n  }\n\n  //изменение состояния кнопки\n  _toggleSaveButtonState() {\n    if (this._hasInvalidInput()) {\n      this._submitButton.classList.add(this._inactiveButtonClass);\n      this._submitButton.disabled = true;\n    } else {\n      this._submitButton.classList.remove(this._inactiveButtonClass);\n      this._submitButton.disabled = false;\n    }\n  }\n\n  //навешивание слушателей на каждый инпут\n  _setEventListeners() {\n    this._toggleSaveButtonState();\n    this._inputList.forEach((inputElement) => {\n      inputElement.addEventListener(\"input\", () => {\n        this._checkInputValidity(inputElement, this._form);\n        this._toggleSaveButtonState();\n      });\n    });\n  }\n\n  //Отключение кнопки сохранения формы\n  disableSaveButton() {\n    this._submitButton.classList.add(this._inactiveButtonClass);\n    this._submitButton.disabled = true;\n  }\n\n  enableValidation() {\n    this._setEventListeners();\n  }\n}\n\nexport default FormValidator;\n","class Section {\r\n  constructor({ renderer, containerSelector }) {\r\n    this._renderer = renderer;\r\n    this._container = containerSelector;\r\n  }\r\n\r\n  renderItems(items) {\r\n    items.forEach((item) => {\r\n      this._renderer(item);\r\n    });\r\n  }\r\n\r\n  addItem(element) {\r\n    this._container.prepend(element);\r\n  }\r\n}\r\n\r\nexport default Section;\r\n","class Popup {\r\n  constructor(popupSelector) {\r\n    this._popup = document.querySelector(popupSelector);\r\n    this._closeButton = this._popup.querySelector(\".popup__close-button\");\r\n    this._handleEscClose = this._handleEscClose.bind(this);\r\n  }\r\n\r\n  _handleEscClose(event) {\r\n    if (event.key === \"Escape\") {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  setEventListeners() {\r\n    //закрытие по оверлею\r\n    this._popup\r\n      .querySelector(\".popup__container\")\r\n      .addEventListener(\"click\", (event) => {\r\n        event.stopPropagation();\r\n      });\r\n    this._popup.addEventListener(\"click\", () => {\r\n      this.close();\r\n    });\r\n\r\n    //закрытие попапов по крестику\r\n    this._closeButton.addEventListener(\"click\", () => {\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  open() {\r\n    this._popup.classList.add(\"popup_opened\");\r\n    document.addEventListener(\"keydown\", this._handleEscClose);\r\n  }\r\n\r\n  close() {\r\n    this._popup.classList.remove(\"popup_opened\");\r\n    document.removeEventListener(\"keydown\", this._handleEscClose);\r\n  }\r\n}\r\n\r\nexport default Popup;\r\n","import Popup from \"./Popup.js\";\n\nclass PopupWithForm extends Popup {\n  constructor({ popupSelector, handleFormSubmit }) {\n    super(popupSelector);\n    this._handleFormSubmit = handleFormSubmit;\n    this._inputList = Array.from(this._popup.querySelectorAll(\"input\"));\n    this._form = this._popup.querySelector(\".form\");\n  }\n\n  renderLoading(isLoading) {\n    if (isLoading) {\n      this._popup.querySelector(\".form__save-button\").textContent =\n        \"Сохранение...\";\n    } else {\n      this._popup.querySelector(\".form__save-button\").textContent = \"Сохранить\";\n    }\n  }\n\n  _getInputValues() {\n    this._formValues = {};\n    this._inputList.forEach((item) => {\n      this._formValues[item.name] = item.value;\n    });\n    return this._formValues;\n  }\n\n  setInputValues(data) {\n    this._inputList.forEach((input) => {\n      input.value = data[input.name];\n    });\n  }\n\n  setEventListeners() {\n    super.setEventListeners();\n    this._popup.addEventListener(\"submit\", (event) => {\n      event.preventDefault();\n      this._handleFormSubmit(this._getInputValues());\n    });\n  }\n\n  close() {\n    super.close();\n    this._form.reset();\n  }\n}\n\nexport default PopupWithForm;\n","import Popup from \"./Popup.js\";\n\nclass PopupWithConfirmation extends Popup {\n  constructor({ popupSelector, handleFormSubmit }) {\n    super(popupSelector);\n    this._handleFormSubmit = handleFormSubmit;\n  }\n\n  setCardId(card) {\n    this._cardId = card;\n  }\n\n  setCardTemplate(cardTemplate) {\n    this._cardTemplate = cardTemplate;\n  }\n\n  setEventListeners() {\n    super.setEventListeners();\n    this._popup.addEventListener(\"submit\", (event) => {\n      event.preventDefault();\n      this._handleFormSubmit(this._cardId, this._cardTemplate);\n    });\n  }\n}\n\nexport default PopupWithConfirmation;\n","class UserInfo {\r\n  constructor({ nameOfProfileSelector, professionOfProfileSelector }) {\r\n    this._nameOfProfile = document.querySelector(nameOfProfileSelector);\r\n    this._professionOfProfile = document.querySelector(\r\n      professionOfProfileSelector\r\n    );\r\n  }\r\n\r\n  getUserInfo() {\r\n    const profile = {};\r\n    profile[\"profile-name\"] = this._nameOfProfile.textContent;\r\n    profile[\"profile-profession\"] = this._professionOfProfile.textContent;\r\n    return profile;\r\n  }\r\n\r\n  setUserInfo({ newName, newProfession }) {\r\n    this._nameOfProfile.textContent = newName;\r\n    this._professionOfProfile.textContent = newProfession;\r\n  }\r\n}\r\n\r\nexport default UserInfo;\r\n","export const cardContainerSelector = document.querySelector(\".elements__list\");\n\n//кнопки\nexport const btnEditSection = document.querySelector(\".profile__edit-button\");\nexport const btnAddSection = document.querySelector(\".profile__add-button\");\nexport const btnAvatarChange = document.querySelector(\n  \".profile__avatar-container\"\n);\n\n//профиль\nexport const profileName = document.querySelector(\".profile__name\");\nexport const profileDescription = document.querySelector(\".profile__subline\");\nexport const profileAvatar = document.querySelector(\".profile__avatar\");\n\n// параметры валидации\nexport const validationConfiguration = {\n  formSelector: \".form\",\n  inputSelector: \".form__input\",\n  submitButtonSelector: \".form__save-button\",\n  inactiveButtonClass: \"form__save-button_disabled\",\n  inputErrorClass: \"form__input_type_error\",\n  errorClass: \"form__input-error_active\",\n};\n","import Popup from \"./Popup.js\";\r\n\r\nclass PopupWithImage extends Popup {\r\n  constructor(popupSelector) {\r\n    super(popupSelector);\r\n    this._popupImage = this._popup.querySelector(\".popup__image\");\r\n    this._popupImageDescription = this._popup.querySelector(\".popup__subline\");\r\n  }\r\n\r\n  open(name, link) {\r\n    super.open();\r\n    this._popupImage.src = link;\r\n    this._popupImage.alt = name;\r\n    this._popupImageDescription.textContent = name;\r\n  }\r\n}\r\n\r\nexport default PopupWithImage;\r\n","import \"../pages/index.css\";\n//импорт классов и данных для карточек\nimport Card from \"../components/Card\";\nimport FormValidator from \"../components/FormValidator.js\";\nimport Section from \"../components/Section.js\";\nimport PopupWithForm from \"../components/PopupWithForm.js\";\nimport PopupWithConfirmation from \"../components/PopupWithConfirmation.js\";\nimport UserInfo from \"../components/UserInfo.js\";\nimport {\n  cardContainerSelector,\n  btnAddSection,\n  btnEditSection,\n  validationConfiguration,\n  profileName,\n  profileDescription,\n  profileAvatar,\n  btnAvatarChange,\n} from \"../utils/constants.js\";\nimport PopupWithImage from \"../components/PopupWithImage.js\";\nimport Api from \"../components/Api.js\";\nlet profileId;\nconst validators = {};\n\n//создание инстанса api для запросов на сервер\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-58\",\n  headers: {\n    authorization: \"a1cc8da9-0d2e-4557-86c3-213f2f44f274\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n//создание секции для карточек\nconst cardList = new Section({\n  renderer: (item) => {\n    const card = createCard(item, \"#card-template\");\n    cardList.addItem(card);\n  },\n  containerSelector: cardContainerSelector,\n});\n\n//получение карточек с сервера и установление имени и описания профиля\nPromise.all([api.getUserInfo(), api.getInitialCards()])\n  .then(([userData, cardsData]) => {\n    profileName.textContent = userData.name;\n    profileDescription.textContent = userData.about;\n    profileAvatar.src = userData.avatar;\n    profileId = userData._id;\n    cardList.renderItems(cardsData.reverse());\n  })\n  .catch((err) => {\n    console.log(err);\n  });\n\n//получение информации о профиле\nconst profileInfo = new UserInfo({\n  nameOfProfileSelector: \".profile__name\",\n  professionOfProfileSelector: \".profile__subline\",\n});\n\n//обработчик клика на корзину\nfunction handleTrashClick(cardId, card) {\n  popupDeleteConfirmation.open();\n  popupDeleteConfirmation.setCardId(cardId);\n  popupDeleteConfirmation.setCardTemplate(card);\n}\n\n//обработчик клика по карточке\nfunction handleCardClick(item) {\n  popupImage.open(item.name, item.link);\n}\n\n//Пытался функции обработки лайка и удаление лайка вынести за функцию создания карточки,\n//но в таком случае невозможно обратиться к методам card\n\n//создание карточки\nfunction createCard(item, cardTemplate = \"#card-template\") {\n  const card = new Card(\n    item,\n    \"#card-template\",\n    handleCardClick,\n    handleTrashClick,\n    profileId,\n    handleAddingLike,\n    handleRemovingLike\n  );\n\n  //обработчик удаления лайка\n  function handleRemovingLike(cardData, likes, likeButton) {\n    api\n      .removeLike(cardData._id)\n      .then((data) => {\n        console.log(data);\n        card.setLikes(data.likes);\n        likeButton.classList.remove(\"card__button_active\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  //обработчик добавления лайка\n  function handleAddingLike(cardData, likes, likeButton) {\n    api\n      .addLike(cardData._id)\n      .then((data) => {\n        console.log(data);\n        likeButton.classList.add(\"card__button_active\");\n        card.setLikes(data.likes);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  const cardElement = card.getView();\n  return cardElement;\n}\n\n//создание попапа подтверждения удаления карточки\nconst popupDeleteConfirmation = new PopupWithConfirmation({\n  popupSelector: \".popup_confirmation\",\n  handleFormSubmit: (cardId, card) => {\n    api\n      .handleDeleteCard(cardId)\n      .then((data) => {\n        console.log(data);\n        popupDeleteConfirmation.close();\n        card.remove();\n      })\n      .catch((err) => console.log(err));\n  },\n});\n\n//создание попапа с добавлением карточки\nconst popupAdd = new PopupWithForm({\n  popupSelector: \".popup_add\",\n  handleFormSubmit: (formData) => {\n    popupAdd.renderLoading(true);\n    api\n      .addNewCard(formData[\"card-name\"], formData[\"card-link\"])\n      .then((data) => {\n        console.log(data);\n        const card = createCard(data, \"#card-template\", () => {\n          popupImage.open(data.name, data.link);\n        });\n        cardList.addItem(card);\n        popupAdd.close();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => {\n        popupAdd.renderLoading(false);\n      });\n  },\n});\n\n//создание попапа с изменением профиля\nconst popupEdit = new PopupWithForm({\n  popupSelector: \".popup_edit\",\n  handleFormSubmit: (formData) => {\n    popupEdit.renderLoading(true);\n    api\n      .changeUserInfo(formData[\"profile-name\"], formData[\"profile-profession\"])\n      .then((data) => {\n        profileInfo.setUserInfo({\n          newName: formData[\"profile-name\"],\n          newProfession: formData[\"profile-profession\"],\n        });\n        console.log(data);\n        popupEdit.close();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => {\n        popupEdit.renderLoading(false);\n      });\n  },\n});\n\n//создание попапа с картинкой\nconst popupImage = new PopupWithImage(\".popup_image\");\n\n//создание попапа с изменением аватарки профиля\nconst popupAvatar = new PopupWithForm({\n  popupSelector: \".popup_avatar\",\n  handleFormSubmit: (formData) => {\n    popupAvatar.renderLoading(true);\n    api\n      .changeProfileAvatar(formData[\"avatar-link\"])\n      .then((data) => {\n        console.log(data);\n        profileAvatar.src = data.avatar;\n        popupAvatar.close();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        popupAvatar.renderLoading(false);\n      });\n  },\n});\n\n//валидация каждой формы\nfunction enableValidation(selectors) {\n  const formList = Array.from(\n    document.querySelectorAll(selectors.formSelector)\n  );\n  formList.forEach((form) => {\n    const validator = new FormValidator(selectors, form);\n    const nameOfForm = form.getAttribute(\"name\");\n    validators[nameOfForm] = validator;\n    validator.enableValidation();\n  });\n}\n\n//открытие профиля по кнопке\nbtnEditSection.addEventListener(\"click\", () => {\n  popupEdit.open();\n  popupEdit.setInputValues(profileInfo.getUserInfo());\n  validators[\"profile-edit\"].disableSaveButton();\n});\n\n//открытие формы с добавлением карточки\nbtnAddSection.addEventListener(\"click\", () => {\n  popupAdd.open();\n  validators[\"card-add\"].disableSaveButton();\n});\n\n//открытие попапа с изменением аватара\nbtnAvatarChange.addEventListener(\"click\", () => {\n  popupAvatar.open();\n  validators[\"avatar-change\"].disableSaveButton();\n});\n\npopupImage.setEventListeners();\npopupEdit.setEventListeners();\npopupAdd.setEventListeners();\npopupAvatar.setEventListeners();\npopupDeleteConfirmation.setEventListeners();\nenableValidation(validationConfiguration);\n\n//TODO ДОБАВИТЬ СПИННЕР ДЛЯ АВАТАРКИ\n","export default class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  //обработка запроса\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  //запрос на изменение аватарки\n  changeProfileAvatar(avatarLink) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        avatar: avatarLink,\n      }),\n    }).then(this._getResponseData);\n  }\n\n  //запрос на добавление карточки\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then(this._getResponseData);\n  }\n\n  //запрос на удаление лайка\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._getResponseData);\n  }\n\n  //запрос на добавление карточки\n  addNewCard(newName, newLink) {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n      method: \"POST\",\n      body: JSON.stringify({\n        name: newName,\n        link: newLink,\n      }),\n    }).then(this._getResponseData);\n  }\n\n  //запрос на удаление карточки\n  handleDeleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      headers: this._headers,\n      method: \"DELETE\",\n    }).then(this._getResponseData);\n  }\n\n  //запрос на получение информации о профиле\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    }).then(this._getResponseData);\n  }\n\n  //запрос на изменение профиля\n  changeUserInfo(newName, newAbout) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name: newName,\n        about: newAbout,\n      }),\n    }).then(this._getResponseData);\n  }\n\n  //загрузка карт с сервера\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, { headers: this._headers }).then(\n      this._getResponseData\n    );\n  }\n}\n"],"names":["Card","card","cardTemplate","handleCardClick","handleTrashClick","profileId","handleAddingLike","handleRemovingLike","this","_cardTemplate","_profileId","_card","_name","name","_link","link","_likes","likes","_cardId","_id","_ownerId","owner","_newCard","_getTemplateCard","_likeButton","querySelector","_deleteButton","_cardImage","_numberOfLikes","_handleCardClick","_handleTrashClick","_handleAddingLike","_handleRemovingLike","style","display","document","content","cloneNode","textContent","src","alt","classList","contains","likesData","length","forEach","cardLiker","add","addEventListener","_handleLike","_showTrashIcon","_setData","setLikes","_setEventListeners","FormValidator","selectors","form","_selectors","_formSelector","formSelector","_inputSelector","inputSelector","_submitButtonSelector","submitButtonSelector","_inactiveButtonClass","inactiveButtonClass","_inputErrorClass","inputErrorClass","_errorClass","errorClass","_form","_inputList","Array","from","querySelectorAll","_submitButton","inputElement","errorMessage","errorElement","id","remove","validity","valid","_hideInputError","_showInputError","validationMessage","some","_hasInvalidInput","disabled","_toggleSaveButtonState","_checkInputValidity","renderer","containerSelector","_renderer","_container","items","item","element","prepend","popupSelector","_popup","_closeButton","_handleEscClose","bind","event","key","close","stopPropagation","removeEventListener","handleFormSubmit","_handleFormSubmit","isLoading","_formValues","value","data","input","preventDefault","_getInputValues","reset","Popup","nameOfProfileSelector","professionOfProfileSelector","_nameOfProfile","_professionOfProfile","profile","newName","newProfession","cardContainerSelector","btnEditSection","btnAddSection","btnAvatarChange","profileName","profileDescription","profileAvatar","_popupImage","_popupImageDescription","validators","api","options","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","avatarLink","fetch","method","body","JSON","stringify","avatar","then","_getResponseData","cardId","newLink","newAbout","about","authorization","cardList","Section","createCard","addItem","all","getUserInfo","getInitialCards","userData","cardsData","renderItems","reverse","catch","err","console","log","profileInfo","UserInfo","popupDeleteConfirmation","open","setCardId","setCardTemplate","popupImage","cardData","likeButton","addLike","removeLike","getView","PopupWithConfirmation","handleDeleteCard","popupAdd","PopupWithForm","formData","renderLoading","addNewCard","finally","popupEdit","changeUserInfo","setUserInfo","PopupWithImage","popupAvatar","changeProfileAvatar","setInputValues","disableSaveButton","setEventListeners","validator","nameOfForm","getAttribute","enableValidation"],"sourceRoot":""}